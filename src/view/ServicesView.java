/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.Random;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import pfe.fatema.Matrice;
import utils.QOSRelation;
import utils.Query;
import utils.TimeSerie;
import utils.TimeSerieGroup;

/**
 *
 * @author Taleb
 */
public class ServicesView extends javax.swing.JPanel {

    private void initComboBoxes() {
        DefaultComboBoxModel<String> model = (DefaultComboBoxModel<String>) jComboBox1.getModel();
        model.removeAllElements();
        int index= JCBCompositions.getSelectedIndex();
        ArrayList<TimeSerieGroup> servicesDatabase = Principal.getServicesDatabase(index);
        int i = 0;
        for (TimeSerieGroup timeSerieGroup : servicesDatabase) {
            model.addElement("s" + i);
            i++;
        }

        DefaultComboBoxModel<String> model1 = (DefaultComboBoxModel<String>) jComboBox2.getModel();
        model1.removeAllElements();
        i = 0;
        for (TimeSerieGroup timeSerieGroup : servicesDatabase) {
            model1.addElement("s" + i);
            i++;
        }

        DefaultComboBoxModel<String> modelClient = (DefaultComboBoxModel<String>) jComboBoxListClient.getModel();
        modelClient.removeAllElements();
        i = 0;
        for (TimeSerieGroup timeSerieGroup : servicesDatabase) {
            modelClient.addElement("s" + i);
            i++;
        }

    }

    /**
     * Creates new form ServicesView
     */
    public ServicesView() {

        initComponents();
        initTreeView();
        initComboBoxes();
        jTable1.getTableHeader().setFont(new Font("BankGothic Md BT", 1, 18));
        final Color colorBlueTheme = new Color(91, 68, 131);
        jTable1.getTableHeader().setForeground(colorBlueTheme);
        refreshServiceComposition();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel3 = new javax.swing.JPanel();
        JLBService = new javax.swing.JLabel();
        JLBServiceValue = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        JLBDistanceFinal = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        JLBDistanceQOS = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        JLBDistanceQA = new javax.swing.JLabel();
        JLBDistanceQA1 = new javax.swing.JLabel();
        JLBDistanceQA2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        JLBMeilleurDistanceFinal = new javax.swing.JLabel();
        JLBMeilleurDistanceQOS = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        JLBMeilleurDistanceQA = new javax.swing.JLabel();
        jComboBoxListClient = new javax.swing.JComboBox<>();
        JLBDistanceQA4 = new javax.swing.JLabel();
        JLBMeilleurService = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        JLBcout1 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jButtonAjouter = new javax.swing.JButton();
        JLBTailleValue = new javax.swing.JLabel();
        JBAddComposition = new javax.swing.JButton();
        JCBCompositions = new javax.swing.JComboBox<>();

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(91, 68, 131)));

        JLBService.setFont(new java.awt.Font("BankGothic Md BT", 1, 18)); // NOI18N
        JLBService.setForeground(new java.awt.Color(91, 68, 131));
        JLBService.setText("Service :");

        JLBServiceValue.setFont(new java.awt.Font("BankGothic Md BT", 1, 18)); // NOI18N
        JLBServiceValue.setForeground(new java.awt.Color(91, 68, 131));

        jSeparator1.setForeground(new java.awt.Color(91, 68, 131));
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(91, 68, 131)));
        jSeparator1.setOpaque(true);

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setAutoscrolls(true);

        jTable1.setFont(new java.awt.Font("BankGothic Md BT", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "debit", "rÃ©putation", "cout"
            }
        ));
        jTable1.setFillsViewportHeight(true);
        jTable1.setGridColor(new java.awt.Color(91, 68, 131));
        jTable1.setSelectionBackground(new java.awt.Color(53, 76, 99));
        jTable1.setShowVerticalLines(false);
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(91, 68, 131)), "Calculatrice de distance", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("BankGothic Md BT", 1, 14), new java.awt.Color(91, 68, 131))); // NOI18N
        jPanel1.setOpaque(false);

        JLBDistanceFinal.setFont(new java.awt.Font("BankGothic Md BT", 1, 18)); // NOI18N
        JLBDistanceFinal.setForeground(new java.awt.Color(91, 68, 131));
        JLBDistanceFinal.setText("Distance Finale :");

        jComboBox1.setEditable(true);
        jComboBox1.setFont(new java.awt.Font("BankGothic Md BT", 1, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(91, 68, 131));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.setBorder(null);
        jComboBox1.setOpaque(false);

        JLBDistanceQOS.setFont(new java.awt.Font("BankGothic Md BT", 1, 18)); // NOI18N
        JLBDistanceQOS.setForeground(new java.awt.Color(91, 68, 131));
        JLBDistanceQOS.setText("Distance QOS :");

        jComboBox2.setEditable(true);
        jComboBox2.setFont(new java.awt.Font("BankGothic Md BT", 1, 14)); // NOI18N
        jComboBox2.setForeground(new java.awt.Color(91, 68, 131));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton2.setBackground(new java.awt.Color(91, 68, 131));
        jButton2.setFont(new java.awt.Font("BankGothic Md BT", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/image/tape-measure.png"))); // NOI18N
        jButton2.setText("<html>Distance entre<br> deux services</html> ");
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setOpaque(true);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        JLBDistanceQA.setFont(new java.awt.Font("BankGothic Md BT", 1, 18)); // NOI18N
        JLBDistanceQA.setForeground(new java.awt.Color(91, 68, 131));
        JLBDistanceQA.setText("Distance QA :");

        JLBDistanceQA1.setFont(new java.awt.Font("BankGothic Md BT", 1, 18)); // NOI18N
        JLBDistanceQA1.setForeground(new java.awt.Color(91, 68, 131));
        JLBDistanceQA1.setText("service 1 :");

        JLBDistanceQA2.setFont(new java.awt.Font("BankGothic Md BT", 1, 18)); // NOI18N
        JLBDistanceQA2.setForeground(new java.awt.Color(91, 68, 131));
        JLBDistanceQA2.setText("service 2 :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JLBDistanceQA)
                    .addComponent(JLBDistanceQOS)
                    .addComponent(JLBDistanceFinal)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(JLBDistanceQA1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(JLBDistanceQA2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLBDistanceQA1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLBDistanceQA2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(JLBDistanceQA, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(JLBDistanceQOS, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(JLBDistanceFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(91, 68, 131)), "Selection du Client", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("BankGothic Md BT", 1, 14), new java.awt.Color(91, 68, 131))); // NOI18N
        jPanel4.setOpaque(false);

        JLBMeilleurDistanceFinal.setFont(new java.awt.Font("BankGothic Md BT", 1, 18)); // NOI18N
        JLBMeilleurDistanceFinal.setForeground(new java.awt.Color(91, 68, 131));
        JLBMeilleurDistanceFinal.setText("Distance Finale :");

        JLBMeilleurDistanceQOS.setFont(new java.awt.Font("BankGothic Md BT", 1, 18)); // NOI18N
        JLBMeilleurDistanceQOS.setForeground(new java.awt.Color(91, 68, 131));
        JLBMeilleurDistanceQOS.setText("Distance QOS :");

        jButton3.setBackground(new java.awt.Color(91, 68, 131));
        jButton3.setFont(new java.awt.Font("BankGothic Md BT", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/image/internet-search.png"))); // NOI18N
        jButton3.setText("<html> Recherche de <br> similaritÃ©</html> ");
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setOpaque(true);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        JLBMeilleurDistanceQA.setFont(new java.awt.Font("BankGothic Md BT", 1, 18)); // NOI18N
        JLBMeilleurDistanceQA.setForeground(new java.awt.Color(91, 68, 131));
        JLBMeilleurDistanceQA.setText("Distance QA :");

        jComboBoxListClient.setEditable(true);
        jComboBoxListClient.setFont(new java.awt.Font("BankGothic Md BT", 1, 14)); // NOI18N
        jComboBoxListClient.setForeground(new java.awt.Color(91, 68, 131));
        jComboBoxListClient.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        JLBDistanceQA4.setFont(new java.awt.Font("BankGothic Md BT", 1, 18)); // NOI18N
        JLBDistanceQA4.setForeground(new java.awt.Color(91, 68, 131));
        JLBDistanceQA4.setText("Client  :");

        JLBMeilleurService.setFont(new java.awt.Font("BankGothic Md BT", 1, 18)); // NOI18N
        JLBMeilleurService.setForeground(new java.awt.Color(91, 68, 131));
        JLBMeilleurService.setText("Meilleur Service :");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JLBMeilleurDistanceFinal)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(JLBDistanceQA4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxListClient, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(JLBMeilleurDistanceQOS)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(JLBMeilleurService))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(JLBMeilleurDistanceQA)))
                .addGap(30, 30, 30))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLBDistanceQA4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxListClient, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(JLBMeilleurService, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(JLBMeilleurDistanceQA, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(JLBMeilleurDistanceQOS, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(JLBMeilleurDistanceFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(JLBService)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JLBServiceValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(181, 181, 181))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(5, 5, 5))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JLBServiceValue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JLBService, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                .addGap(7, 7, 7)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        jPanel2.setBackground(new java.awt.Color(91, 68, 131));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(91, 68, 131)));

        jTree1.setFont(new java.awt.Font("BankGothic Lt BT", 1, 12)); // NOI18N
        jTree1.setForeground(new java.awt.Color(91, 68, 131));
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Liste des services");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("s1");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("0");
        javax.swing.tree.DefaultMutableTreeNode treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("1");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("2");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("3");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("4");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("s2");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("0");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("1");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("2");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("3");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("4");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("s3");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("0");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("1");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("2");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("3");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("4");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("s4");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("0");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("1");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("2");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("3");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("4");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("debit");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("cout");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("rÃ©putation");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        JLBcout1.setFont(new java.awt.Font("BankGothic Md BT", 1, 18)); // NOI18N
        JLBcout1.setForeground(new java.awt.Color(255, 255, 255));
        JLBcout1.setText("Taille");

        jSlider1.setBackground(new java.awt.Color(91, 68, 131));
        jSlider1.setMaximum(250);
        jSlider1.setMinimum(1);

        jButtonAjouter.setBackground(new java.awt.Color(91, 68, 131));
        jButtonAjouter.setFont(new java.awt.Font("BankGothic Md BT", 1, 18)); // NOI18N
        jButtonAjouter.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAjouter.setText("Ajouter");
        jButtonAjouter.setBorderPainted(false);
        jButtonAjouter.setContentAreaFilled(false);
        jButtonAjouter.setOpaque(true);
        jButtonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjouterActionPerformed(evt);
            }
        });

        JLBTailleValue.setFont(new java.awt.Font("BankGothic Md BT", 1, 18)); // NOI18N
        JLBTailleValue.setForeground(new java.awt.Color(255, 255, 255));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jSlider1, org.jdesktop.beansbinding.ELProperty.create("${value}"), JLBTailleValue, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        JBAddComposition.setBackground(new java.awt.Color(91, 68, 131));
        JBAddComposition.setFont(new java.awt.Font("BankGothic Md BT", 1, 18)); // NOI18N
        JBAddComposition.setForeground(new java.awt.Color(255, 255, 255));
        JBAddComposition.setText("<html>Nouvelle <br> Composition");
        JBAddComposition.setBorderPainted(false);
        JBAddComposition.setContentAreaFilled(false);
        JBAddComposition.setOpaque(true);
        JBAddComposition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBAddCompositionActionPerformed(evt);
            }
        });

        JCBCompositions.setEditable(true);
        JCBCompositions.setFont(new java.awt.Font("BankGothic Md BT", 1, 14)); // NOI18N
        JCBCompositions.setForeground(new java.awt.Color(91, 68, 131));
        JCBCompositions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        JCBCompositions.setBorder(null);
        JCBCompositions.setOpaque(false);
        JCBCompositions.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                JCBCompositionsPropertyChange(evt);
            }
        });
        JCBCompositions.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                JCBCompositionsVetoableChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(JCBCompositions, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JBAddComposition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(JLBcout1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JLBTailleValue, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAjouter)))
                .addGap(4, 4, 4))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(JCBCompositions, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JBAddComposition, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButtonAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JLBTailleValue)
                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JLBcout1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree1ValueChanged
        // TODO add your handling code here:
        TreePath tp = evt.getNewLeadSelectionPath();
        if (tp != null) {
            try {

                String selectedService = tp.getLastPathComponent().toString();
                JLBServiceValue.setText(selectedService);
                if (selectedService.toLowerCase().startsWith("s")) {
                    try {
                        int selectedServiceID = Integer.parseInt(selectedService.substring(1));
                        System.out.println("selected id = " + selectedServiceID);
                        int index = JCBCompositions.getSelectedIndex();
                        TimeSerieGroup tsg = Principal.getServicesDatabase(index).get(selectedServiceID);
                        ArrayList<Query> lireToutesLesRequetes = tsg.lireToutesLesRequetes();
                        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                        model.setRowCount(0);
                        model.setColumnCount(0);
                        Vector debitVector;

                        debitVector = new Vector();
                        Query querydebit = lireToutesLesRequetes.get(0);
                        for (int i = 0; i < querydebit.size(); i++) {
                            debitVector.add(i);
                        }
                        model.addColumn("Temps", debitVector);

                        debitVector = new Vector();
                        for (int i = 0; i < querydebit.size(); i++) {
                            TimeSerie lire = querydebit.lire(i);
                            debitVector.add(lire.getX());
                        }
                        model.addColumn("DÃ©bit", debitVector);

                        debitVector = new Vector();
                        Query queryReput = lireToutesLesRequetes.get(1);
                        for (int i = 0; i < queryReput.size(); i++) {
                            TimeSerie lire = queryReput.lire(i);
                            debitVector.add(lire.getX());
                        }
                        model.addColumn("RÃ©putation", debitVector);

                        debitVector = new Vector();
                        Query query = lireToutesLesRequetes.get(2);
                        for (int i = 0; i < query.size(); i++) {
                            TimeSerie lire = query.lire(i);
                            debitVector.add(lire.getX());
                        }
                        model.addColumn("Cout", debitVector);

                    } catch (Exception e) {
                    }
                }

            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jTree1ValueChanged

    private void jButtonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjouterActionPerformed

        // 1 generation des Services
        int index = JCBCompositions.getSelectedIndex();
        for (int i = 0; i < jSlider1.getValue(); i++) {
            Principal.getServicesDatabase(index).add(GenerateTSG(150));

        }
        
        initTreeView();
        initComboBoxes();

    }//GEN-LAST:event_jButtonAjouterActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String selectedService1 = (String) jComboBox1.getSelectedItem();
        String selectedService2 = (String) jComboBox2.getSelectedItem();
        int selectedServiceID = Integer.parseInt(selectedService1.substring(1));
        int selectedServiceID2 = Integer.parseInt(selectedService2.substring(1));
        int index= JCBCompositions.getSelectedIndex();

        ArrayList<TimeSerieGroup> servicesDatabase = Principal.getServicesDatabase(index);
        TimeSerieGroup tsg1 = servicesDatabase.get(selectedServiceID);
        TimeSerieGroup tsg2 = servicesDatabase.get(selectedServiceID2);

        float calculerDistanceQA = tsg1.lireEnUneSeulRequete().calculerDistanceQA(tsg2.lireEnUneSeulRequete());
        JLBDistanceQA.setText("Distance QA : " + calculerDistanceQA);

        QOSRelation qosr1 = new QOSRelation(tsg1);
        QOSRelation qosr2 = new QOSRelation(tsg2);

        float QRDistance = Matrice.DistanceQosr(qosr1.distance(qosr2));
        JLBDistanceQOS.setText("Distance QOS : " + QRDistance);

        float finalDistance = (float) Math.sqrt(QRDistance * calculerDistanceQA);

        JLBDistanceFinal.setText("Distance Finale : " + finalDistance);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String clientSelectionner = (String) jComboBoxListClient.getSelectedItem();
        int selectedClientID = Integer.parseInt(clientSelectionner.substring(1));
        int index= JCBCompositions.getSelectedIndex();
        ArrayList<TimeSerieGroup> servicesDatabase = Principal.getServicesDatabase(index);
        TimeSerieGroup Client = servicesDatabase.get(selectedClientID);
        ArrayList<Float> listDistanceQA = new ArrayList<>();
        ArrayList<Float> listDistanceQOS = new ArrayList<>();
        ArrayList<Float> listDistanceFINAL = new ArrayList<>();
        for (TimeSerieGroup serviceEnCours : servicesDatabase) {
            float calculerDistanceQA = Client.lireEnUneSeulRequete().calculerDistanceQA(serviceEnCours.lireEnUneSeulRequete());
            listDistanceQA.add(calculerDistanceQA);
            QOSRelation qosr1 = new QOSRelation(Client);
            QOSRelation qosr2 = new QOSRelation(serviceEnCours);
            float DistanceQosr = Matrice.DistanceQosr(qosr1.distance(qosr2));
            listDistanceQOS.add(DistanceQosr);
            float finalDistance = (float) Math.sqrt(DistanceQosr * calculerDistanceQA);
            
                listDistanceFINAL.add(finalDistance);
            
        }
        
        float minimalCourant = Float.MAX_VALUE;
        int candidatGagnant = 0;
        index = 0;
        for (Float candidatCourant : listDistanceFINAL) {
            if (candidatCourant<minimalCourant  && candidatCourant>0) {
                minimalCourant = candidatCourant;
                candidatGagnant=index;
            }
            index++;
        }
        
        
        JLBMeilleurService.setText("Meilleur Service : S"+candidatGagnant);
        JLBMeilleurDistanceQA.setText("Distance QA : "+listDistanceQA.get(candidatGagnant));
        JLBMeilleurDistanceQOS.setText("Distance QOS : "+listDistanceQOS.get(candidatGagnant));
        JLBMeilleurDistanceFinal.setText("Distance Finale : "+listDistanceFINAL.get(candidatGagnant));
        

    }//GEN-LAST:event_jButton3ActionPerformed

    private void JBAddCompositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBAddCompositionActionPerformed
        // TODO add your handling code here:
        Principal.addServiceComposition();
        refreshServiceComposition();
    }//GEN-LAST:event_JBAddCompositionActionPerformed

    private void JCBCompositionsVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_JCBCompositionsVetoableChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_JCBCompositionsVetoableChange

    private void JCBCompositionsPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_JCBCompositionsPropertyChange
        // TODO add your handling code here:
        initTreeView();
        initComboBoxes();
    }//GEN-LAST:event_JCBCompositionsPropertyChange
    private TimeSerieGroup GenerateTSG(final int TAILLE) {
        TimeSerieGroup tsg = new TimeSerieGroup();
        Random r = new Random();
        tsg.ajouter(new Query(TAILLE,r));
        tsg.ajouter(new Query(TAILLE,r));
        tsg.ajouter(new Query(TAILLE,r));
        return tsg;
    }

    void refreshServiceComposition(){
        int sizeOfDatabase = Principal.sizeOfDatabase();
        if (sizeOfDatabase==0) {
            return;
        }
        DefaultComboBoxModel<String> model = (DefaultComboBoxModel<String>) JCBCompositions.getModel();
        model.removeAllElements();
        for (int i = 0; i < sizeOfDatabase; i++) {
            model.addElement("Service Composition "+i);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBAddComposition;
    private javax.swing.JComboBox<String> JCBCompositions;
    private javax.swing.JLabel JLBDistanceFinal;
    private javax.swing.JLabel JLBDistanceQA;
    private javax.swing.JLabel JLBDistanceQA1;
    private javax.swing.JLabel JLBDistanceQA2;
    private javax.swing.JLabel JLBDistanceQA4;
    private javax.swing.JLabel JLBDistanceQOS;
    private javax.swing.JLabel JLBMeilleurDistanceFinal;
    private javax.swing.JLabel JLBMeilleurDistanceQA;
    private javax.swing.JLabel JLBMeilleurDistanceQOS;
    private javax.swing.JLabel JLBMeilleurService;
    private javax.swing.JLabel JLBService;
    private javax.swing.JLabel JLBServiceValue;
    private javax.swing.JLabel JLBTailleValue;
    private javax.swing.JLabel JLBcout1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonAjouter;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBoxListClient;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTree jTree1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void initTreeView() {
        DefaultMutableTreeNode tn = new DefaultMutableTreeNode("Liste des Services");
        int index = JCBCompositions.getSelectedIndex();
        ArrayList<TimeSerieGroup> servicesDatabase = Principal.getServicesDatabase(index);
        index = 0;
        for (TimeSerieGroup timeSerieGroup : servicesDatabase) {
            final DefaultMutableTreeNode serviceTreeNode = new DefaultMutableTreeNode("S" + index);
            tn.add(serviceTreeNode);
            index++;
            ArrayList<Query> requetes = timeSerieGroup.lireToutesLesRequetes();
            Query requete = requetes.get(0);
            int size = requete.size();
            for (int i = 0; i < size; i++) {
                final DefaultMutableTreeNode timeSerie = new DefaultMutableTreeNode(i);
                serviceTreeNode.add(timeSerie);

                String[] names = new String[]{"DÃ©bit", "RÃ©putation", "Cout"};

                for (int selectedName = 0; selectedName < names.length; selectedName++) {
                    timeSerie.add(new DefaultMutableTreeNode(names[selectedName] + " " + requetes.get(selectedName).lire(i).getX()));
                }

            }

        }
        final DefaultTreeModel defaultTreeModel = new DefaultTreeModel(tn);
        jTree1.setModel(defaultTreeModel);
    }
}


